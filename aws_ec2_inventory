import boto3
from collections import defaultdict

def aws_ec2_inventory(host, port):
  # Replace with your AWX credentials with EC2 describe permissions across accounts
  aws_access_key_id = "..."
  aws_secret_access_key = "..."
  region_name = "..."  # Optional: Specify a default region if needed

  # Create an empty inventory dictionary
  inventory = defaultdict(dict)

  # Create a boto3 EC2 client session
  session = boto3.Session(
      aws_access_key_id=aws_access_key_id,
      aws_secret_access_key=aws_secret_access_key,
      region_name=region_name,
  )
  ec2_client = session.client('ec2')

  # Get all AWS accounts from Organizations (if available)
  organizations_client = session.client('organizations')
  paginator = organizations_client.get_paginator('list_accounts')
  for page in paginator.paginate():
      for account in page['Accounts']:
          account_id = account['Id']

          # Assume role for the target account (configure appropriate role permissions)
          sts_client = session.client('sts')
          assumed_role_session = sts_client.assume_role(
              RoleArn=f"arn:aws:iam::{account_id}:role/AWXEC2InventoryRole",
              SessionName="AWXInventory"
          )
          credentials = assumed_role_session['Credentials']

          # Create a new session for the target account
          target_session = boto3.Session(
              aws_access_key_id=credentials['AccessKeyId'],
              aws_secret_access_key=credentials['SecretAccessKey'],
              aws_session_token=credentials['SessionToken'],
          )

          # Use the target account session to get EC2 instances
          target_ec2_client = target_session.client('ec2')
          reservations = target_ec2_client.describe_instances()

          for reservation in reservations['Reservations']:
              for instance in reservation['Instances']:
                  instance_id = instance['InstanceId']
                  # Get instance details (optional)
                  instance_info = target_ec2_client.describe_instances(InstanceIds=[instance_id])
                  instance_public_dns_name = instance_info['Reservations'][0]['Instances'][0].get('PublicDnsName', instance_id)
                  # Add the instance to the inventory with the account ID as the group
                  inventory[account_id][instance_id] = {'public_dns_name': instance_public_dns_name}

  return inventory

# Example usage (modify host and port for your AWX setup)
inventory = aws_ec2_inventory('localhost', 443)
print(inventory)
